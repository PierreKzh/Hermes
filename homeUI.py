# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\Pierre\Desktop\HermesPY\addContact.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QAction, QApplication
from PyQt5 import QtWidgets, QtCore, QtGui, QtTest

import tools
from tools import *



class Ui_home(object):
    def setupUi(self, homeWindow, idUser):
        print("========================START HOME========================")
        homeWindow.setObjectName("MainWindow")
        homeWindow.resize(1273, 793)
        self.centralwidget = QtWidgets.QWidget(homeWindow)
        self.centralwidget.setStyleSheet("background-color: rgb(52, 52, 52);")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.top_bar = QtWidgets.QFrame(self.centralwidget)
        self.top_bar.setMaximumSize(QtCore.QSize(16777215, 80))
        self.top_bar.setStyleSheet("background-color: rgb(43, 43, 43);")
        self.top_bar.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.top_bar.setFrameShadow(QtWidgets.QFrame.Raised)
        self.top_bar.setObjectName("top_bar")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.top_bar)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame_user = QtWidgets.QFrame(self.top_bar)
        self.frame_user.setMaximumSize(QtCore.QSize(220, 80))
        self.frame_user.setStyleSheet("background-color: rgb(34, 34, 34);")
        self.frame_user.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_user.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_user.setObjectName("frame_user")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frame_user)
        self.horizontalLayout_4.setSpacing(0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.pushButton_Profil = QtWidgets.QPushButton(self.frame_user)
        self.pushButton_Profil.setStyleSheet("background-color: #404EED;")
        self.pushButton_Profil.setObjectName("pushButton_Profil")
        self.horizontalLayout_4.addWidget(self.pushButton_Profil)
        self.horizontalLayout.addWidget(self.frame_user)
        self.frame_topbar = QtWidgets.QFrame(self.top_bar)
        self.frame_topbar.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_topbar.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_topbar.setObjectName("frame_topbar")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frame_topbar)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_Title = QtWidgets.QLabel(self.frame_topbar)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_Title.setFont(font)
        self.label_Title.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_Title.setAlignment(QtCore.Qt.AlignCenter)
        self.label_Title.setObjectName("label_Title")
        self.verticalLayout_5.addWidget(self.label_Title)
        self.horizontalLayout.addWidget(self.frame_topbar)
        self.verticalLayout.addWidget(self.top_bar)
        self.Content = QtWidgets.QFrame(self.centralwidget)
        self.Content.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Content.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Content.setObjectName("Content")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.Content)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.frame_sidebar = QtWidgets.QFrame(self.Content)
        self.frame_sidebar.setMaximumSize(QtCore.QSize(220, 16777215))
        self.frame_sidebar.setStyleSheet("background-color: rgb(43, 43, 43);")
        self.frame_sidebar.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_sidebar.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_sidebar.setObjectName("frame_sidebar")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame_sidebar)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.frame_sidebar_top = QtWidgets.QFrame(self.frame_sidebar)
        self.frame_sidebar_top.setMaximumSize(QtCore.QSize(16777215, 60))
        self.frame_sidebar_top.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_sidebar_top.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_sidebar_top.setObjectName("frame_sidebar_top")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_sidebar_top)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_ListContact = QtWidgets.QPushButton(self.frame_sidebar_top)
        self.pushButton_ListContact.setStyleSheet("background-color: #404EED;")
        self.pushButton_ListContact.setObjectName("pushButton_ListContact")
        self.horizontalLayout_3.addWidget(self.pushButton_ListContact)
        self.pushButton_AddContact = QtWidgets.QPushButton(self.frame_sidebar_top)
        self.pushButton_AddContact.setStyleSheet("background-color: #404EED;")
        self.pushButton_AddContact.setObjectName("pushButton_AddContact")
        self.horizontalLayout_3.addWidget(self.pushButton_AddContact)
        self.verticalLayout_2.addWidget(self.frame_sidebar_top)
        self.frame_sidebar_center = QtWidgets.QFrame(self.frame_sidebar)
        self.frame_sidebar_center.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_sidebar_center.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_sidebar_center.setObjectName("frame_sidebar_center")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_sidebar_center)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.stackedWidget = QtWidgets.QStackedWidget(self.frame_sidebar_center)
        self.stackedWidget.setObjectName("stackedWidget")
        self.page_ListContact = QtWidgets.QWidget()
        self.page_ListContact.setObjectName("page_ListContact")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.page_ListContact)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.lineEdit_Research = QtWidgets.QLineEdit(self.page_ListContact)
        self.lineEdit_Research.setStyleSheet("background-color: rgb(153, 155, 255);\n"
                                             "color: rgb(255, 255, 255);")
        self.lineEdit_Research.setObjectName("lineEdit_Research")
        self.verticalLayout_6.addWidget(self.lineEdit_Research)
        self.listWidget_contacts = QtWidgets.QListWidget(self.page_ListContact)
        self.listWidget_contacts.setStyleSheet("background-color: rgb(88, 88, 88);")
        self.listWidget_contacts.setObjectName("listWidget_contacts")
        self.verticalLayout_6.addWidget(self.listWidget_contacts)
        self.stackedWidget.addWidget(self.page_ListContact)
        self.page_AddContact = QtWidgets.QWidget()
        self.page_AddContact.setObjectName("page_AddContact")
        self.formLayout = QtWidgets.QFormLayout(self.page_AddContact)
        self.formLayout.setObjectName("formLayout")
        self.label_Username = QtWidgets.QLabel(self.page_AddContact)
        self.label_Username.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_Username.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_Username.setObjectName("label_Username")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_Username)
        self.lineEdit_Username = QtWidgets.QLineEdit(self.page_AddContact)
        self.lineEdit_Username.setStyleSheet("color: rgb(255, 255, 255);")
        self.lineEdit_Username.setObjectName("lineEdit_Username")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.lineEdit_Username)
        self.label_IdContact = QtWidgets.QLabel(self.page_AddContact)
        self.label_IdContact.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_IdContact.setObjectName("label_IdContact")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_IdContact)
        self.lineEdit_IdContact = QtWidgets.QLineEdit(self.page_AddContact)
        self.lineEdit_IdContact.setStyleSheet("color: rgb(255, 255, 255);")
        self.lineEdit_IdContact.setObjectName("lineEdit_IdContact")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.lineEdit_IdContact)
        self.label_AddContactEvent = QtWidgets.QLabel(self.page_AddContact)
        self.label_AddContactEvent.setStyleSheet("color: rgb(255, 0, 0);")
        self.label_AddContactEvent.setText("")
        self.label_AddContactEvent.setObjectName("label_AddContactEvent")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.SpanningRole, self.label_AddContactEvent)
        self.pushButton_Add = QtWidgets.QPushButton(self.page_AddContact)
        self.pushButton_Add.setStyleSheet("background-color: #404EED;")
        self.pushButton_Add.setObjectName("pushButton_Add")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.SpanningRole, self.pushButton_Add)
        self.stackedWidget.addWidget(self.page_AddContact)
        self.verticalLayout_4.addWidget(self.stackedWidget)
        self.verticalLayout_2.addWidget(self.frame_sidebar_center)
        self.frame_sidebar_bottom = QtWidgets.QFrame(self.frame_sidebar)
        self.frame_sidebar_bottom.setMaximumSize(QtCore.QSize(16777215, 50))
        self.frame_sidebar_bottom.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_sidebar_bottom.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_sidebar_bottom.setObjectName("frame_sidebar_bottom")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.frame_sidebar_bottom)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.pushButton_Parameter = QtWidgets.QPushButton(self.frame_sidebar_bottom)
        self.pushButton_Parameter.setStyleSheet("background-color: #404EED;")
        self.pushButton_Parameter.setObjectName("pushButton_Parameter")
        self.horizontalLayout_5.addWidget(self.pushButton_Parameter)
        self.verticalLayout_2.addWidget(self.frame_sidebar_bottom)
        self.horizontalLayout_2.addWidget(self.frame_sidebar)
        self.frame_leftcontent = QtWidgets.QFrame(self.Content)
        self.frame_leftcontent.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_leftcontent.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_leftcontent.setObjectName("frame_leftcontent")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_leftcontent)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.stackedWidget_2 = QtWidgets.QStackedWidget(self.frame_leftcontent)
        self.stackedWidget_2.setObjectName("stackedWidget_2")
        self.page_message = QtWidgets.QWidget()
        self.page_message.setObjectName("page_message")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.page_message)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.frame_leftcontent_top = QtWidgets.QFrame(self.page_message)
        self.frame_leftcontent_top.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_leftcontent_top.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_leftcontent_top.setObjectName("frame_leftcontent_top")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.frame_leftcontent_top)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.listWidget_MessageLeft = QtWidgets.QListWidget(self.frame_leftcontent_top)
        self.listWidget_MessageLeft.setStyleSheet("background-color: rgb(88, 88, 88);")
        self.listWidget_MessageLeft.setObjectName("listWidget_MessageLeft")
        self.horizontalLayout_7.addWidget(self.listWidget_MessageLeft)
        self.listWidget_MessageRight = QtWidgets.QListWidget(self.frame_leftcontent_top)
        self.listWidget_MessageRight.setStyleSheet("background-color: rgb(88, 88, 88);")
        self.listWidget_MessageRight.setObjectName("listWidget_MessageRight")
        self.horizontalLayout_7.addWidget(self.listWidget_MessageRight)
        self.verticalLayout_7.addWidget(self.frame_leftcontent_top)
        self.frame_leftcontent_bottom = QtWidgets.QFrame(self.page_message)
        self.frame_leftcontent_bottom.setMaximumSize(QtCore.QSize(16777215, 50))
        self.frame_leftcontent_bottom.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_leftcontent_bottom.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_leftcontent_bottom.setObjectName("frame_leftcontent_bottom")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.frame_leftcontent_bottom)
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_8.setSpacing(10)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.lineEdit_Message_2 = QtWidgets.QLineEdit(self.frame_leftcontent_bottom)
        self.lineEdit_Message_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.lineEdit_Message_2.setStyleSheet("background-color: rgb(153, 155, 255);\n"
                                              "color: rgb(255, 255, 255);")
        self.lineEdit_Message_2.setObjectName("lineEdit_Message_2")
        self.horizontalLayout_8.addWidget(self.lineEdit_Message_2)
        self.pushButton_Send_2 = QtWidgets.QPushButton(self.frame_leftcontent_bottom)
        self.pushButton_Send_2.setStyleSheet("background-color: #404EED;")
        self.pushButton_Send_2.setObjectName("pushButton_Send_2")
        self.horizontalLayout_8.addWidget(self.pushButton_Send_2)
        self.verticalLayout_7.addWidget(self.frame_leftcontent_bottom)
        self.stackedWidget_2.addWidget(self.page_message)
        self.page_Profil = QtWidgets.QWidget()
        self.page_Profil.setObjectName("page_Profil")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.page_Profil)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.pushButton_pagemessage1 = QtWidgets.QPushButton(self.page_Profil)
        self.pushButton_pagemessage1.setObjectName("pushButton_pagemessage1")
        self.horizontalLayout_9.addWidget(self.pushButton_pagemessage1)
        self.label_Profil = QtWidgets.QLabel(self.page_Profil)
        self.label_Profil.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_Profil.setLineWidth(1)
        self.label_Profil.setObjectName("label_Profil")
        self.horizontalLayout_9.addWidget(self.label_Profil)
        self.stackedWidget_2.addWidget(self.page_Profil)
        self.page_Parameter = QtWidgets.QWidget()
        self.page_Parameter.setObjectName("page_Parameter")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.page_Parameter)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.pushButton_pagemessage1_2 = QtWidgets.QPushButton(self.page_Parameter)
        self.pushButton_pagemessage1_2.setObjectName("pushButton_pagemessage1_2")
        self.horizontalLayout_10.addWidget(self.pushButton_pagemessage1_2)
        self.label_Parameter = QtWidgets.QLabel(self.page_Parameter)
        self.label_Parameter.setObjectName("label_Parameter")
        self.horizontalLayout_10.addWidget(self.label_Parameter)
        self.stackedWidget_2.addWidget(self.page_Parameter)
        self.verticalLayout_3.addWidget(self.stackedWidget_2)
        self.horizontalLayout_2.addWidget(self.frame_leftcontent)
        self.verticalLayout.addWidget(self.Content)
        homeWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(homeWindow)
        self.stackedWidget.setCurrentIndex(1)
        self.stackedWidget_2.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(homeWindow)

        #add action for list of members
        self.listWidget_contacts.setContextMenuPolicy(Qt.ActionsContextMenu)
        self.actionDelete = QAction("Delete", self.listWidget_contacts)
        self.listWidget_contacts.addAction(self.actionDelete)
        self.listWidget_contacts.clicked.connect(lambda _, s=self: setCurrentContact(s))
        #add function for an action in list members
        self.actionDelete.triggered.connect(lambda _, s=self: deleteContact(s))
        #display members list in the widget list contact
        self.idUser = idUser
        displayListWidget_contacts(self)
        #add contact pushing the buttun
        self.pushButton_Add.clicked.connect(lambda _, s=self: addContact(s))
        # send message
        self.pushButton_Send_2.clicked.connect(lambda _, s=self: sendMessage(s))

        # switch page
        self.pushButton_AddContact.clicked.connect(
            lambda: self.stackedWidget.setCurrentWidget(self.page_AddContact))
        self.pushButton_ListContact.clicked.connect(
            lambda: self.stackedWidget.setCurrentWidget(self.page_ListContact))
        self.pushButton_Profil.clicked.connect(
            lambda: self.stackedWidget_2.setCurrentWidget(self.page_Profil))
        self.pushButton_Parameter.clicked.connect(
            lambda: self.stackedWidget_2.setCurrentWidget(self.page_Parameter))
        self.pushButton_pagemessage1_2.clicked.connect(
            lambda: self.stackedWidget_2.setCurrentWidget(self.page_message))
        self.pushButton_pagemessage1.clicked.connect(
            lambda: self.stackedWidget_2.setCurrentWidget(self.page_message))

        #button for copy user id
        self.buttonCopyId = QtWidgets.QPushButton("copy ID", self.page_Profil)
        self.horizontalLayout_9.addWidget(self.buttonCopyId)
        self.buttonCopyId.clicked.connect(lambda _, s=self: copyIdToClipboard(s))

        print("ID de l'utilisateur connecté : ", idUser)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_Profil.setText(_translate("MainWindow", "Profil"))
        self.label_Title.setText(_translate("MainWindow", "Title"))
        self.pushButton_ListContact.setText(_translate("MainWindow", "List Contact"))
        self.pushButton_AddContact.setText(_translate("MainWindow", "Add contact"))
        self.lineEdit_Research.setPlaceholderText(_translate("MainWindow", "Research"))
        self.label_Username.setText(_translate("MainWindow", "Username :"))
        self.label_IdContact.setText(_translate("MainWindow", "Id : "))
        self.pushButton_Add.setText(_translate("MainWindow", "Add"))
        self.pushButton_Parameter.setText(_translate("MainWindow", "Parameter"))
        self.lineEdit_Message_2.setPlaceholderText(_translate("MainWindow", "Send message"))
        self.pushButton_Send_2.setText(_translate("MainWindow", "Send"))
        self.pushButton_pagemessage1.setText(_translate("MainWindow", "Back"))
        self.label_Profil.setText(_translate("MainWindow", "Profil"))
        self.pushButton_pagemessage1_2.setText(_translate("MainWindow", "Back"))
        self.label_Parameter.setText(_translate("MainWindow", "Parameter"))

def copyIdToClipboard(self):
    cb = QApplication.clipboard()
    cb.clear(mode=cb.Clipboard)
    cb.setText(f"{tools.sharedOnionAddress}{tools.sharedPublicKey}", mode=cb.Clipboard)
    self.buttonCopyId.setText('copied !')
    QtTest.QTest.qWait(750)
    self.buttonCopyId.setText('copy ID')

def addContact(self):
    print("===========add contact=============")
    # Connection to the database
    conn = sqlite3.connect('dataFile.db')
    cursor = conn.cursor()
    crypt = crypto()

    #get informations
    username = self.lineEdit_Username.text()
    idContact = self.lineEdit_IdContact.text()

    # Error : No passwd or username
    if not username or not idContact:
        self.label_AddContactEvent.setStyleSheet("color:#FC6151;")
        self.label_AddContactEvent.setText("Fill in the form")
        print("===========add failed : username or Id forgot===========")
        return

    #encrypt datas
    encrypt_contactUsername = crypt.encrypted(sharedPassword, username)
    encrypt_contactOnion = crypt.encrypted(sharedPassword, idContact[:62])
    encrypt_contactPubKey = crypt.encrypted(sharedPassword, idContact[62:])
    encrypt_idUser = crypt.encrypted(sharedPassword, self.idUser)

    # add contact
    cursor.execute(f"INSERT INTO contacts (user_id, contact_username, contact_onion, contact_publicKey) VALUES ('{encrypt_idUser}', '{encrypt_contactUsername}', '{encrypt_contactOnion}', '{encrypt_contactPubKey}')")
    conn.commit()

    self.label_AddContactEvent.setText("The contact has been added")
    self.label_AddContactEvent.setStyleSheet("color:#27AE4E;")
    self.lineEdit_Username.setText("")
    self.lineEdit_IdContact.setText("")

    displayListWidget_contacts(self)
    print(f"==========contact add - {username}:{idContact}====================")

def deleteContact(self):
    print("===========delete contact=============")
    currentContact = self.listWidget_contacts.currentItem().text()

    # Connection to the database
    conn = sqlite3.connect('dataFile.db')
    cursor = conn.cursor()
    crypt = crypto()

    # get contact username
    cursor.execute(f'SELECT contact_username FROM contacts')
    rows = cursor.fetchall()
    for row in rows:
        db_username = row[0]
        decrypt_username = crypt.decrypted(sharedPassword, db_username)
        # delete contact
        if currentContact == decrypt_username:
            cursor.execute(f"DELETE FROM contacts WHERE contact_username = '{db_username}'")
            break
    conn.commit()

    displayListWidget_contacts(self)
    print(f"===========delete contact : {decrypt_username}=============")

def displayListWidget_contacts(self):
    print("===========displayListWidget_contacts=============")
    self.listWidget_contacts.clear()

    # bdd connexion
    conn = sqlite3.connect('dataFile.db')
    cursor = conn.cursor()
    crypt = crypto()

    # get contact username
    cursor.execute(f'SELECT user_id, contact_username FROM contacts')
    rows = cursor.fetchall()
    for row in rows:
        db_userId = row[0]
        decrypt_userId = crypt.decrypted(sharedPassword, db_userId)
        db_username = row[1]
        decrypt_username = crypt.decrypted(sharedPassword, db_username)
        # display contact
        if decrypt_userId == str(self.idUser):
            self.listWidget_contacts.insertItem(0, decrypt_username)

    print("===========displayListWidget_contacts END=============")

def setCurrentContact(self):
    print("===========SetCurrentContact BEGINING=============")
    self.currentContact = self.listWidget_contacts.currentItem().text()
    self.label_Title.setText(self.currentContact)
    print(f"===========SetCurrentContact : {self.currentContact}=============")

def sendMessage(self):
    ##########################################################################
    # A METTRE DANS UN THREAD SINON APPLI BLOQUE LE TEMPS DENVOIS DU MESSAGE #
    ##########################################################################
    #try:
        message = self.lineEdit_Message_2.text()
        self.lineEdit_Message_2.setText("")
        if message:
            print("=============SEND MESSAGE=========================")
            addressOnion = ''
            publicKey = ''

            # Connection to the database
            conn = sqlite3.connect('dataFile.db')
            cursor = conn.cursor()
            crypt = crypto()

            # get contact
            cursor.execute('SELECT contact_username, contact_onion, contact_publicKey FROM contacts')
            rows = cursor.fetchall()
            for row in rows:
                db_username = row[0]
                decrypt_username = crypt.decrypted(sharedPassword, db_username)
                db_address = row[1]
                decrypt_address = crypt.decrypted(sharedPassword, db_address)
                db_publicKey = row[2]
                decrypt_publicKey = crypt.decrypted(sharedPassword, db_publicKey)
                # get onion address
                if self.currentContact == decrypt_username:
                    addressOnion = decrypt_address
                    publicKey = decrypt_publicKey.replace(r'\n', '\n')
                    break
            conn.commit()

            #encrypt message
            jsonMessage = '{"sendCode":100, "value":"'+message+'"}'
            import_pubKey = RSA.importKey(bytes(publicKey, 'utf-8'))
            jsonMessageEncrypt = crypto.encrypt_RSA(import_pubKey, bytes(jsonMessage, 'utf-8'))

            #send message
            socks.setdefaultproxy(socks.PROXY_TYPE_SOCKS5, "127.0.0.1", tools.communication.internalPortClient, True)
            s = socks.socksocket()
            s.connect((addressOnion, tools.communication.externalPortServer))
            s.sendall(jsonMessageEncrypt)

            #reply = s.recv(4096)
            print(f"=============MESSAGE SEND : \"{message}\" to : {addressOnion}============")
    #except:
        #print("=============ERROR WHEN SENDING MESSAGE===============")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    homeWindow = QtWidgets.QMainWindow()
    ui = Ui_home()
    ui.setupUi(homeWindow)
    homeWindow.show()
    sys.exit(app.exec_())